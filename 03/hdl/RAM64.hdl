// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // select the register load by demuxing address
    DMux8Way(in=load, sel=address[3..5], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    
    // RAM bank
    RAM8(address=address[0..2], in=in, load=load1, out=out1);
    RAM8(address=address[0..2], in=in, load=load2, out=out2);
    RAM8(address=address[0..2], in=in, load=load3, out=out3);
    RAM8(address=address[0..2], in=in, load=load4, out=out4);
    RAM8(address=address[0..2], in=in, load=load5, out=out5);
    RAM8(address=address[0..2], in=in, load=load6, out=out6);
    RAM8(address=address[0..2], in=in, load=load7, out=out7);
    RAM8(address=address[0..2], in=in, load=load8, out=out8);

    // select the output by muxing
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[3..5], out=out);

}